{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyborg\\\\Desktop\\\\Indeed-clone\\\\client\\\\src\\\\pages\\\\Allposts.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../components/Header\";\nimport { useEffect, useState } from \"react\";\nimport { getAllPosts } from \"../services/api\";\nimport { Box, InputBase, Card, CardContent, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllPosts = () => {\n  _s();\n  const [posts, setPosts] = useEffect([]);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await getAllPosts();\n      setPosts(response.data);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(InputBase, {\n          children: \"Search Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: post.profile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AllPosts, \"ugREJMqpDqXwuPP0nSF2Pej5Xew=\");\n_c = AllPosts;\nexport default AllPosts;\nvar _c;\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"names":["Header","useEffect","useState","getAllPosts","Box","InputBase","Card","CardContent","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPosts","_s","posts","setPosts","getData","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","profile","_c","$RefreshReg$"],"sources":["C:/Users/Cyborg/Desktop/Indeed-clone/client/src/pages/Allposts.jsx"],"sourcesContent":["import Header from \"../components/Header\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getAllPosts } from \"../services/api\";\r\nimport { Box, InputBase, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nconst AllPosts = () =>{\r\n    const [posts,setPosts] = useEffect([]);\r\n    useEffect(()=> {\r\n        const getData = async()=>{\r\n            const response = await getAllPosts();\r\n            setPosts(response.data);\r\n        }\r\n        getData();\r\n    },[])\r\n    return (<>\r\n        <Header/>\r\n        <Box>\r\n\r\n            <Box>\r\n                <InputBase>Search Job Title</InputBase>\r\n            </Box>\r\n            <Box>\r\n                {\r\n                posts.map(post => (\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography>{post.profile}</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )) }\r\n            </Box>\r\n        </Box>\r\n        </>\r\n    );\r\n}\r\nexport default AllPosts;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9E,MAAMC,QAAQ,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGf,SAAS,CAAC,EAAE,CAAC;EACtCA,SAAS,CAAC,MAAK;IACX,MAAMgB,OAAO,GAAG,MAAAA,CAAA,KAAS;MACrB,MAAMC,QAAQ,GAAG,MAAMf,WAAW,CAAC,CAAC;MACpCa,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC;IACDF,OAAO,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EACL,oBAAQP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACJV,OAAA,CAACV,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTd,OAAA,CAACN,GAAG;MAAAgB,QAAA,gBAEAV,OAAA,CAACN,GAAG;QAAAgB,QAAA,eACAV,OAAA,CAACL,SAAS;UAAAe,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNd,OAAA,CAACN,GAAG;QAAAgB,QAAA,EAEAL,KAAK,CAACU,GAAG,CAACC,IAAI,iBACVhB,OAAA,CAACJ,IAAI;UAAAc,QAAA,eACDV,OAAA,CAACH,WAAW;YAAAa,QAAA,eACRV,OAAA,CAACF,UAAU;cAAAY,QAAA,EAAEM,IAAI,CAACC;YAAO;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAAAV,EAAA,CA7BKD,QAAQ;AAAAe,EAAA,GAARf,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}