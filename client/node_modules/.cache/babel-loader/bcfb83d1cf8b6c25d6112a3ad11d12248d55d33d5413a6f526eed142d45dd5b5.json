{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyborg\\\\Desktop\\\\Indeed-clone\\\\client\\\\src\\\\pages\\\\Allposts.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../components/Header\";\nimport { useEffect, useState } from \"react\";\nimport { getAllPosts } from \"../services/api\";\nimport { Box, InputBase, Card, CardContent, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllPosts = () => {\n  _s();\n  const [posts, setPosts] = useEffect([]);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    const getData = async () => {\n      const response = await getAllPosts();\n      setPosts(response.data);\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Job title\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FindButton, {\n        variant: \"contained\",\n        children: \"Find Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostWrapper, {\n      children: posts.filter(post => post.profile.toLowerCase().includes(text.toLowerCase())).map(post => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: post.profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: post.type === \"Offline\" ? \"Remote\" : \"Office\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Salary: \", post.salary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: '#6f6f6f',\n              margin: '10px 0'\n            },\n            children: post.description.length > 150 ? post.description.substring(0, 150) + \"...\" : post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 45\n            }, this), \": \", post.experience]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Technology\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 45\n            }, this), \": \", post.technology]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: '#6f6f6f',\n              marginTop: 'auto'\n            },\n            children: [\"posted on \", new Date(post.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AllPosts, \"TraLpB4YpCSXEn9pRvuCOj6yhlA=\");\n_c = AllPosts;\nexport default AllPosts;\nvar _c;\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"names":["Header","useEffect","useState","getAllPosts","Box","InputBase","Card","CardContent","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPosts","_s","posts","setPosts","text","setText","getData","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","SearchContainer","placeholder","onChange","e","target","value","SearchIcon","FindButton","variant","PostWrapper","filter","post","profile","toLowerCase","includes","map","type","salary","style","color","margin","description","length","substring","experience","technology","marginTop","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Cyborg/Desktop/Indeed-clone/client/src/pages/Allposts.jsx"],"sourcesContent":["import Header from \"../components/Header\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getAllPosts } from \"../services/api\";\r\nimport { Box, InputBase, Card, CardContent, Typography } from \"@mui/material\";\r\n\r\nconst AllPosts = () =>{\r\n    const [posts,setPosts] = useEffect([]);\r\n    const [text, setText] = useState(\"\");\r\n    useEffect(()=> {\r\n        const getData = async()=>{\r\n            const response = await getAllPosts();\r\n            setPosts(response.data);\r\n        }\r\n        getData();\r\n    },[])\r\n    return (<>\r\n        <Header/>\r\n        <Header />\r\n            <SearchContainer>\r\n                <Box>\r\n                    <InputBase \r\n                        placeholder='Job title'\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                    <SearchIcon />\r\n                </Box>\r\n                <FindButton\r\n                    variant=\"contained\"\r\n                >Find Jobs</FindButton>\r\n            </SearchContainer>\r\n            <PostWrapper>\r\n                {\r\n                    posts.filter(post => post.profile.toLowerCase().includes(text.toLowerCase())).map(post => (\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h5\">{post.profile}</Typography>\r\n                                <Typography>{post.type === \"Offline\" ? \"Remote\" : \"Office\"}</Typography>\r\n                                <Typography>Salary: {post.salary}</Typography>\r\n                                <Typography \r\n                                    style={{ color: '#6f6f6f', margin: '10px 0' }}\r\n                                >\r\n                                    {post.description.length > 150 ? post.description.substring(0, 150) + \"...\" : post.description}\r\n                                </Typography>\r\n                                <Typography><b>Experience</b>: {post.experience}</Typography>\r\n                                <Typography><b>Technology</b>: {post.technology}</Typography>\r\n                                <Typography style={{ color: '#6f6f6f', marginTop: 'auto' }}>\r\n                                    posted on {new Date(post.createdAt).toLocaleDateString()}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))\r\n                }\r\n            </PostWrapper>\r\n        </>\r\n    );\r\n}\r\nexport default AllPosts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}